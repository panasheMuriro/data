# -*- coding: utf-8 -*-
"""pandas_shopping_trends.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16XC2TP_2N1tZzSfOa1uD8fbem7Ws5KRs
"""
import pandas as pd
import matplotlib.pyplot as plt
# Load your dataset
df = pd.read_csv('shopping_trends.csv')

# Task 1 Load the dataset into a Pandas DataFrame.
# Display the first few rows and check the column names, data types, and basic statistics using .head(), .info(), and .describe().

# df.info()
# df.describe()
# x =df.head()

# ------------------------------------------------
# Task 2: Handle Missing Data
# Identify columns with missing values using .isna() or .isnull().
# Fill missing values in the "Review Rating" column with the columnâ€™s mean.

# ------------------------------------------------
# Tasks 3 Rename Columns
# Rename columns to make them Python-friendly (e.g., replace spaces with underscores).
df.rename(columns={"Gender": "gender col"}, inplace=True)
df.columns
# print(x)

# ------------------------------------------------
# -- Tasks 4 Subset Data
# Extract rows where "Age" is greater than 30.
age_above_30 = df[df['Age'] > 30]
# print(age_above_30.head())

# Select only the "Customer ID", "Item Purchased", and "Purchase Amount (USD)" columns.
cip = df[["Customer ID", "Item Purchased","Purchase Amount (USD)" ]]
# print(cip.head())

# ------------------------------------------------
# Task 5 Sort Data
# Sort the dataset by "Purchase Amount (USD)" in descending order.
x = df.sort_values(by="Purchase Amount (USD)", ascending=False)
# print(x.head())


# ------------------------------------------------
# Task 6 Filter Rows
# Filter rows where "Category" is "Clothing" and "Discount Applied" is True.
filtered_rows = df[(df['Category'] == 'Clothing')]
# print(filtered_rows.head())


# ------------------------------------------------
# Task 7 Count Unique Values in a Column
# Count the number of unique "Locations" in the dataset.

unique_locations = df['Location'].nunique()
# print(f"Number of unique locations: {unique_locations}")


# ------------------------------------------------
# Task 8 Group Data by a Single Column
# Group by "Item Purchased" and calculate the total "Purchase Amount (USD)" for each item.
grouped_data = df.groupby("Item Purchased")["Purchase Amount (USD)"].sum()


# ------------------------------------------------
# Task 9 Find Top Categories
# Find the most purchased "Category" (e.g., "Clothing", "Electronics") and its count.
top_category = df['Category'].value_counts().head(1)
# print("Most purchased category:")
# print(top_category)


# ------------------------------------------------
# Task 10 Check Subscription Rate
# Calculate the percentage of customers with a "Subscription Status" of "Yes".
subscription_rate = (df['Subscription Status'].value_counts(normalize=True) * 100).loc['Yes']
print(f"Subscription rate: {subscription_rate:.2f}%")
